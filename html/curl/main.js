(()=>{"use strict";(async()=>{try{const e=await fetch("https://yur4ik1.github.io/html/curl/tree-sitter-bash.wasm");if(!e.ok)throw new Error(`Не вдалося завантажити WebAssembly файл: ${e.statusText}`);const t=await e.arrayBuffer(),n={env:{memory:new WebAssembly.Memory({initial:256,maximum:512}),__indirect_function_table:new WebAssembly.Table({initial:7,element:"anyfunc"}),calloc:(e,t)=>new Array(e*t).fill(0),free:()=>{},realloc:()=>{},malloc:e=>new Array(e).fill(0),memset:(e,t,n)=>{},memcpy:(e,t,n)=>{},iswspace:e=>e===" ".charCodeAt(0)||e==="\n".charCodeAt(0),iswalpha:e=>e>=65&&e<=90||e>=97&&e<=122,iswalnum:e=>e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57,strcmp:(e,t)=>e===t?0:e>t?1:-1,_assert_fail:()=>console.error("Assert failed!"),__assert_fail:(e,t,n,a)=>{console.error(`__assert_fail: ${e} in ${t}:${n} (${a})`)},__stack_pointer:new WebAssembly.Global({value:"i32",mutable:!0},0),__memory_base:0,__table_base:new WebAssembly.Global({value:"i32",mutable:!1},0)}},a=await WebAssembly.instantiate(t,n);console.log("WebAssembly завантажено успішно:",a),document.getElementById("output").textContent="WebAssembly успішно завантажено!"}catch(e){console.error("Помилка завантаження WebAssembly:",e),document.getElementById("output").textContent="Помилка завантаження WebAssembly."}})(),document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("cURL-input"),t=document.getElementById("output"),n=document.getElementById("copy-btn");e.addEventListener("input",(()=>{try{const n=`Generated code for: ${e.value}`;t.textContent=n}catch(e){t.textContent="Error parsing cURL command."}})),n.addEventListener("click",(()=>{navigator.clipboard.writeText(t.textContent).then((()=>{alert("Copied to clipboard!")}))}))}))})();